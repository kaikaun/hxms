COMPILING
==========
1) preprocessor
   cd $HXMS_PIPE_HOME/01_preprocessing/bin
   make

2) clustering 
   cd $HXMS_PIPE_HOME/02_clustering/bin
   make

3) deadtime correction 
   cd $HXMS_PIPE_HOME/03_deadtime_correction/bin
   make

WORKFLOW
==========
1) data preprocessing from mzXML to plain text format, 
   selecting odd/even scans; removing calibration scans
   
   $HXMS_PIPE_HOME/01_preprocess/preprocess -c  data/RI91-244_C_UD_odd.mzXML   test.csv


2) chopping up the input file into smaller clusters
   
   $HXMS_PIPE_HOME/02_clustering/clm test.csv clusters

   * note that directory "clusters" will be created; it must, however be nonexsitent 
     (i.e. if you already have directory with the same name,
      either stash it under a different name, or remove it if you are sure you do not need it)

   * the clusters can be visualized using $HXMS_PIPE_HOME/10_utils/serial_plotter.pl utility;
    for example to visualize the top 50 largest clusters
   
   wc -l clusters/* | sort -gk1 | tail -n 50 >  plotting_input 
   $HXMS_PIPE_HOME/10_utils/serial_plotter.pl plotting_input pdfs 1

      ** note that directory "pdfs" will be created; it must, however be nonexsitent 
         (i.e. if you already have directory with the same name,
         either stash it under a different name, or remove it if you are sure you do not need it)

   * the number of peaks in each cluster can be obtained using $HXMS_PIPE_HOME/10_utils/countpeaks.py
   
   $HXMS_PIPE_HOME/10_utils/countpeaks.py clusters/* > peak_count
    
     ** output:
      clusters/058235.clust MS 1 DB 1 max 22.591
      MS: the number of peaks using mean shift algorithm
      DB: the number of peaks using DB scan algorithm
      max: maximum intensity in the file
   	 

3) deadtime correction: run  $HXMS_PIPE_HOME/03_deadtime_coorection/python/optimize_dt.py to 
   obtain the optimized parameters for deadtime correction on the given set of clusters, along with 
   the command line for $HXMS_PIPE_HOME/03_deadtime_coorection/bin/deadtime to perform this correction
   on the original mzXML file

   Since the optimization uses simulated annealing, several runs should be made to ensure that the true
   global optimum is found. The optimum should also not be too far from the documented value of 5 ns
   non-extending and 0 ns extending.

   presumably we do not need the whole set of clusters:
   awk '$3==1 && $5==1 && $7> 300' peak_count  > opt_input

   $HXMS_PIPE_HOME/10_utils/serial_plotter.pl opt_input before_opt_pdf 0

   $HXMS_PIPE_HOME/03_deadtime_correction/python/optimize_dt.py  opt_input

   ** output of optimize_dt.py:
   Non-extending DT: 6.23277801382 ns
   Extending DT: 0.538481816223 ns
   Command line: deadtime -d6.23277801382 -D0.538481816223 <original mzXML> <corrected mzXML>
   
   $HXMS_PIPE_HOME/03_deadtime_correction/bin/deadtime -d6.2 -D0.54 data/RI91-244_C_UD.mzXML corr.mzXML

   *** no output for deadtime

4) Convert and cluster the deadtime-corrected mzXML file using the same steps as 1) and 2)

   $HXMS_PIPE_HOME/01_preprocess/preprocess -c corr.mzXML corr.csv
   $HXMS_PIPE_HOME/02_clustering/clm corr.csv clusters

5) gaussian fitting: run $HXMS_PIPE_HOME/04_gaussian_fitting/fit_gaussians.py to fit 2D gaussians to
   the peaks found by meanshift in cluster files

   $HXMS_PIPE_HOME/04_gaussian_fitting/fit_gaussians.py clusters/*

   ** output:

   002365.clust : 2 peak
   mz: 770.40893983 RT: 438.348775716
   W_mz: 0.0360026072613 W_RT: 2.90891858561
   Height: 57.6287785261 Volume: 6796.46904507
   mz: 770.495893584 RT: 449.263114128
   W_mz: 0.0421683333336 W_RT: 3.06269110518
   Height: 35.4245978729 Volume: 4721.74499417
   Total calculated intensity: 11518.2140392
   Total recorded intensity: 11823.421

   ...

FILES 
====

clustering
==========
clm.h
* Structs and function declarations for clm

clm_main.c
* Main()

clm_utils.c
* Error handling functions

clm_points.c
* Point handling functions

clm_flags.c
* Flag handling functions

test/unittest.c
* Unit tests for clm.h, clm_points.c, clm_flags.c
* cd test; make unittest; ./unittest

preprocess
==========
